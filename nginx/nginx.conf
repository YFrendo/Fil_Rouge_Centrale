user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;
#Au dessus c'est la configuration de base de Nginx

    limit_req_zone $binary_remote_addr zone=req_limit_per_ip:10m rate=1r/s; #Permet de limiter la fréquence des requettes de toutes les adresses IP connecté à 1/seconde
    limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m; #Permet de limiter le nombre de connexion par adresse IP

upstream loadbalancer { #Permet d'effectuer le load-balancing en local, maximum 6 réplications du serveur flask entre les ports 5001 à 5006 facilement extensible
        server 172.17.0.1:5001;
        server 172.17.0.1:5002;
        server 172.17.0.1:5003;
        server 172.17.0.1:5004;
        server 172.17.0.1:5005;
        server 172.17.0.1:5006;
        }
server{
        listen 80; #Ecoute le port 80
        server_name tojson.yaf.p2021.ajoga.fr; #Adresse du serveur
        location / {
                return 301 https://$host$request_uri; #Redirige vers le port 443
        }
        location /.well-known/acme-challenge/ { #Permet d'utiliser les certificat certbot
        root /var/www/certbot;
                }
        }
server {
        listen 443 ssl; #Ecoute le port 443
        server_name tojson.yaf.p2021.ajoga.fr; #Nom du serveur
		
        ssl_certificate /etc/letsencrypt/live/tojson.yaf.p2021.ajoga.fr/fullchain.pem; #Les 4 lignes suivantes servent à utiliser HTTPS
        ssl_certificate_key /etc/letsencrypt/live/tojson.yaf.p2021.ajoga.fr/privkey.pem;
        include /etc/letsencrypt/options-ssl-nginx.conf;
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
	
	limit_req_status 429; #En cas de dépassement des limites de connxion retourne l'erreur 429 (too many request)

        client_body_buffer_size 25M; #Permet de régler la taille du buffer de Nginx
        client_max_body_size 10M; #Taille maximum des requetes 10MO

        location /{
		limit_req zone=req_limit_per_ip burst=5 nodelay; #Permet de limiter le nombre de requete 
                limit_conn conn_limit_per_ip 30; #Limite à 30 le nombre de connexion sur une meme IP
                auth_basic "api Area"; #Demande un mot de passe
                auth_basic_user_file /etc/nginx/.htpasswd; #Emplacement des identifiants (cryptés)
                proxy_pass http://loadbalancer; #Renvoie vers le load-balancing et les serveurs flask
        }
}
}


